{"version":3,"sources":["components/Login/Login.js","components/Header/header.js","components/Dashboard/index.js","components/User/Users.js","components/User/User.js","components/User/Add.js","components/Ajeet/Ajeet.js","components/Ajeet/Index.js","components/Logout/Logout.js","components/Forgot-password/Index.js","components/Nomatch/Nomatch.js","components/App.js","serviceWorker.js","index.js","assets/images/logo.png"],"names":["Login","loggedIn","localStorage","getItem","state","username","password","remember_me","error","onChange","bind","formSubmit","ev","this","setState","target","name","value","preventDefault","Axios","post","data","status","setItem","token","message","to","className","onSubmit","type","placeholder","id","htmlFor","React","Component","Header","src","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Dashboard","logout","Users","props","isLoaded","items","fetchData","urlId","match","params","fetch","then","res","json","result","pass","path","User","console","log","map","item","key","email","mobile","address","Add","Ajeet","Index","Logout","removeItem","Nomatch","App","exact","component","ForgotPassword","Adduser","Ajeet1","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"2RAIqBA,E,kDAEjB,aAAc,IAAD,sBACT,eACA,IAAIC,GAAW,EAFN,OAIKC,aAAaC,QAAQ,WACzBF,GAAW,GAErB,EAAKG,MAAQ,CACTC,SAAU,GACVC,SAAU,GACVL,WACAM,YAAY,GACZC,MAAO,IAEX,EAAKC,SAAY,EAAKA,SAASC,KAAd,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAfT,E,qDAkBJE,GACLC,KAAKC,SAAL,eACKF,EAAGG,OAAOC,KAAOJ,EAAGG,OAAOE,U,0EAInBL,G,oFACbA,EAAGM,iB,EAC0BL,KAAKT,MAA3BC,E,EAAAA,SAAUC,E,EAAAA,S,kBAEMa,IAAMC,KAAK,SAAU,CAACf,WAAUC,a,OAE3B,OAFlBe,E,QAEEA,KAAKC,QACTpB,aAAaqB,QAAQ,QAASF,EAAKA,KAAKG,OACxCX,KAAKC,SAAS,CACVb,UAAU,EACVO,MAAMa,EAAKA,KAAKI,WAGpBZ,KAAKC,SAAS,CACVN,MAAOa,EAAKA,KAAKI,U,gDAKzBZ,KAAKC,SAAS,CACVN,MAAO,KAAIiB,U,+IAMnB,OAA2B,IAAxBZ,KAAKT,MAAMH,SACH,kBAAC,IAAD,CAAUyB,GAAG,eAGpB,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,YACX,0BAAMC,SAAUf,KAAKF,YACjB,yBAAKgB,UAAU,cACX,2CAAgB,sCAChB,2BAAOE,KAAK,OAAOC,YAAY,iBAAiBb,MAAOJ,KAAKT,MAAMC,SAAUI,SAAUI,KAAKJ,SAAUO,KAAK,WAAWW,UAAU,kBAEnI,yBAAKA,UAAU,cACX,2CAAgB,sCAChB,2BAAOE,KAAK,WAAWC,YAAY,iBAAiBb,MAAOJ,KAAKT,MAAME,SAAUG,SAAUI,KAAKJ,SAAUO,KAAK,WAAWW,UAAU,kBAEvI,yBAAKA,UAAU,oBACVd,KAAKT,MAAMI,OAEhB,yBAAKmB,UAAU,cACX,4BAAQE,KAAK,SAASF,UAAU,mBAAhC,UAEJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,6BACX,2BACIX,KAAK,cACLC,OAAO,EACPR,SAAUI,KAAKJ,SACfsB,GAAG,YACHF,KAAK,aACT,2BAAOG,QAAQ,aAAf,iBAKR,yBAAKL,UAAU,cACX,kBAAC,IAAD,CAAMD,GAAG,mBAAT,4B,GAzFGO,IAAMC,W,iBCApBC,E,uKAGb,OACI,4BAAQR,UAAU,UAClB,yBAAKA,UAAU,qCACb,yBAAKS,IAAKC,IAAMC,IAAI,SACpB,4BAAQX,UAAU,iBAAiBE,KAAK,SAASU,cAAY,WAAWC,cAAY,cAAcC,gBAAc,aAAaC,gBAAc,QAAQC,aAAW,qBAC5J,0BAAMhB,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BI,GAAG,cAC3C,wBAAIJ,UAAU,oCACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWD,GAAG,cAA9B,cAEF,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWD,GAAG,SAA9B,SAEF,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWD,GAAG,UAA9B,UAEF,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWD,GAAG,WAA9B,mB,GAtBgBO,IAAMC,WCCrBU,E,kDAEjB,aAAc,IAAD,sBACT,eACA,IAAI3C,GAAW,EAFN,OAIKC,aAAaC,QAAQ,WACzBF,GAAW,GACrB,EAAK4C,OAAS,EAAKA,OAAOnC,KAAZ,gBACd,EAAKN,MAAO,CACRH,YARK,E,qDAaTY,KAAKC,SAAS,CACVb,UAAU,M,+BAKd,OAA2B,IAAxBY,KAAKT,MAAMH,SACH,kBAAC,IAAD,CAAUyB,GAAG,YAGpB,6BACI,kBAAC,EAAD,MACA,yBAAKC,UAAU,aACX,4D,GA5BmBM,IAAMC,WCAxBY,E,kDAEjB,WAAYC,GAAO,IAAD,sBACd,cAAMA,GACN,IAAI9C,GAAW,EAFD,OAGAC,aAAaC,QAAQ,WACzBF,GAAW,GACrB,EAAK4C,OAAS,EAAKA,OAAOnC,KAAZ,gBACd,EAAKN,MAAO,CACRH,YAIJ,EAAKG,MAAQ,CACTI,MAAO,KACPwC,UAAU,EACVC,MAAO,IAdG,E,gEAmBdpC,KAAKqC,c,kCAEG,IAAD,OACDC,EAAQtC,KAAKkC,MAAMK,MAAMC,OAAOtB,GAEtC,OAAOuB,MADK,SAASH,GAEZI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAEhBF,MACD,SAACG,GACG,EAAK5C,SAAS,CACdkC,UAAU,EACVC,MAAOS,EAAOrC,UAIlB,SAACb,GACG,EAAKM,SAAS,CACdkC,UAAU,EACVxC,e,+BAMZK,KAAKC,SAAS,CACVb,UAAU,M,6BAIXmD,GACH,IAA2B,IAAxBvC,KAAKT,MAAMH,SACV,OAAO,kBAAC,IAAD,CAAUyB,GAAG,YAFf,MAK0Bb,KAAKT,MAAhCI,EALC,EAKDA,MAAOwC,EALN,EAKMA,SAAUC,EALhB,EAKgBA,MAEzB,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKtB,UAAU,aACX,iDACEnB,EAAS,uCAAaA,EAAMiB,SAAiB,KAC5CuB,EAAoC,KAAxB,2CACf,2BAAOrB,UAAU,uBACb,+BACI,4BACI,kCACA,wCACA,wCACA,wCAGR,+BAEI,4BACI,4BAAKsB,EAAMlB,IACX,4BAAKkB,EAAM5C,UACX,4BAAK4C,EAAMU,MAEX,4BAAI,kBAAC,IAAD,CAAMjC,GAAE,UAAKb,KAAKkC,MAAMK,MAAMQ,KAAtB,MAAgCjC,UAAU,YAAlD,kB,GAjFDM,IAAMC,WCApB2B,E,kDAEjB,WAAYd,GAAO,IAAD,sBACd,cAAMA,GACN,IAAI9C,GAAW,EAFD,OAGAC,aAAaC,QAAQ,WACzBF,GAAW,GACrB,EAAK4C,OAAS,EAAKA,OAAOnC,KAAZ,gBACd,EAAKN,MAAO,CACRH,YAIJ,EAAKG,MAAQ,CACTI,MAAO,KACPwC,UAAU,EACVC,MAAO,IAdG,E,gEAiBG,IAAD,OAChBK,MAAM,UACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAEhBF,MACC,SAACG,GACGI,QAAQC,IAAIL,GACd,EAAK5C,SAAS,CACZkC,UAAU,EACVC,MAAOS,OAMX,SAAClD,GACC,EAAKM,SAAS,CACZkC,UAAU,EACVxC,e,+BAORK,KAAKC,SAAS,CACVb,UAAU,M,+BAKd,IAA2B,IAAxBY,KAAKT,MAAMH,SACV,OAAO,kBAAC,IAAD,CAAUyB,GAAG,YAFpB,MAI+Bb,KAAKT,MAAhCI,EAJJ,EAIIA,MAAOwC,EAJX,EAIWA,SAAUC,EAJrB,EAIqBA,MAEzB,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKtB,UAAU,aACX,iDACEnB,EAAS,uCAAaA,EAAMiB,SAAiB,KAC5CuB,EAAoC,KAAxB,2CACf,2BAAOrB,UAAU,uBACb,+BACI,4BACI,kCACA,wCACA,wCACA,qCACA,sCACA,uCACA,yCAGR,+BACKsB,EAAMe,KAAI,SAAAC,GAAI,OACf,wBAAIC,IAAKD,EAAKlC,IACV,4BAAKkC,EAAKlC,IACV,4BAAKkC,EAAK5D,UACV,4BAAK4D,EAAK3D,UACV,4BAAK2D,EAAKE,OACV,4BAAKF,EAAKG,QACV,4BAAKH,EAAKI,SACV,4BAAI,kBAAC,IAAD,CAAS3C,GAAI,UAAUuC,EAAKlC,IAA5B,qB,GAnFFE,IAAMC,WCCnBoC,E,kDAEjB,WAAYvB,GAAO,IAAD,sBACd,cAAMA,GAIN,IAAI9C,GAAW,EALD,OAMAC,aAAaC,QAAQ,WACzBF,GAAW,GACrB,EAAK4C,OAAS,EAAKA,OAAOnC,KAAZ,gBACd,EAAKN,MAAO,CACRH,YAIJ,EAAKG,MAAQ,CACTI,MAAO,KACPwC,UAAU,EACVC,MAAO,IAIX,EAAK7C,MAAQ,CACTC,SAAU,GACVC,SAAU,GACV8D,OAAQ,GACRD,MAAO,GACPlE,WACAO,MAAO,IAEX,EAAKC,SAAY,EAAKA,SAASC,KAAd,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBA9BJ,E,gEAkCAG,KAAKkC,MAAMK,MAAMC,OAAOtB,IAElClB,KAAKqC,c,kCAGD,IAAD,OACDC,EAAQtC,KAAKkC,MAAMK,MAAMC,OAAOtB,GAGtC,OAFA+B,QAAQC,IAAIZ,GAELG,MADK,SAASH,GAEZI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAEhBF,MACD,SAACG,GACG,EAAK5C,SAAS,CACdkC,UAAU,EACVC,MAAOS,EAAOrC,UAIlB,SAACb,GACG,EAAKM,SAAS,CACdkC,UAAU,EACVxC,e,+BAMZK,KAAKC,SAAS,CACVb,UAAU,M,+BAITW,GACLC,KAAKC,SAAL,eACKF,EAAGG,OAAOC,KAAOJ,EAAGG,OAAOE,U,0EAInBL,G,wFACbA,EAAGM,iB,EACuCL,KAAKT,MAAxCC,E,EAAAA,SAAUC,E,EAAAA,SAAS8D,E,EAAAA,OAAOD,E,EAAAA,M,kBAERhD,IAAMC,KAAK,iBAAkB,CAACf,WAAUC,WAAS8D,SAAOD,U,OAAvE7C,E,OACNwC,QAAQC,IAAI,mBAAmBzC,G,gDAE/BT,KAAKC,SAAS,CACVN,MAAO,KAAIiB,U,6IAKhB2B,GACH,IAA2B,IAAxBvC,KAAKT,MAAMH,SACV,OAAO,kBAAC,IAAD,CAAUyB,GAAG,YAFf,MAK0Bb,KAAKT,MAL/B,EAKDI,MALC,EAKMwC,SALN,EAKgBC,MAEzB,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKtB,UAAU,aACX,4CACA,0BAAMC,SAAUf,KAAKF,YACjB,yBAAKgB,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,2CACA,2BAAOE,KAAK,OAAOb,KAAK,WAAWc,YAAY,sBAAsBb,MAAOJ,KAAKT,MAAMC,SAAUsB,UAAU,eAAelB,SAAUI,KAAKJ,aAGjJ,yBAAKkB,UAAU,YACX,yBAAKA,UAAU,cACX,wCACA,2BAAOE,KAAK,OAAOb,KAAK,QAAQc,YAAY,mBAAmBb,MAAOJ,KAAKT,MAAM+D,MAAOxC,UAAU,eAAelB,SAAUI,KAAKJ,aAGxI,yBAAKkB,UAAU,YACX,yBAAKA,UAAU,cACX,yCACA,2BAAOE,KAAK,OAAOb,KAAK,SAASc,YAAY,2BAA2Bb,MAAOJ,KAAKT,MAAMgE,OAAQzC,UAAU,eAAelB,SAAUI,KAAKJ,aAGlJ,yBAAKkB,UAAU,YACX,yBAAKA,UAAU,cACX,2CACA,2BAAOE,KAAK,OAAOb,KAAK,WAAWc,YAAY,sBAAsBb,MAAOJ,KAAKT,MAAME,SAAUqB,UAAU,eAAelB,SAAUI,KAAKJ,aASjJ,yBAAKkB,UAAU,YACX,yBAAKA,UAAU,cACX,4BAAQE,KAAK,SAASF,UAAU,mBAAhC,oB,GAvIHM,IAAMC,WCAlBqC,E,kDAEjB,aAAc,IAAD,sBACT,eACA,IAAItE,GAAW,EAFN,OAIKC,aAAaC,QAAQ,WACzBF,GAAW,GAErB,EAAKG,MAAO,CACRH,YARK,E,qDAaT,OAA2B,IAAxBY,KAAKT,MAAMH,SACH,kBAAC,IAAD,CAAUyB,GAAG,MAGpB,6BACI,kBAAC,EAAD,MACA,yBAAKC,UAAU,aACX,yDACA,kBAAC,IAAD,CAAMD,GAAG,aAAT,iB,GAvBeO,IAAMC,WCDpBsC,E,kDAEjB,WAAYzB,GAAO,IAAD,sBACd,cAAMA,GACN,IAAI9C,GAAW,EAFD,OAGAC,aAAaC,QAAQ,WACzBF,GAAW,GACrB,EAAK4C,OAAS,EAAKA,OAAOnC,KAAZ,gBACd,EAAKN,MAAO,CACRH,YAIJ,EAAKG,MAAQ,CACTI,MAAO,KACPwC,UAAU,EACVC,MAAO,IAdG,E,gEAmBdpC,KAAKqC,c,kCAEG,IAAD,OAGP,OAAOI,MAAM,WACJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAEhBF,MACD,SAACG,GACG,EAAK5C,SAAS,CACdkC,UAAU,EACVC,MAAOS,EAAOrC,UAIlB,SAACb,GACG,EAAKM,SAAS,CACdkC,UAAU,EACVxC,e,+BAMZK,KAAKC,SAAS,CACVb,UAAU,M,6BAIXmD,GACH,IAA2B,IAAxBvC,KAAKT,MAAMH,SACV,OAAO,kBAAC,IAAD,CAAUyB,GAAG,YAFf,MAK0Bb,KAAKT,MAAf6C,GALhB,EAKDzC,MALC,EAKMwC,SALN,EAKgBC,OAEzB,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKtB,UAAU,aACX,iDACA,2BAAOA,UAAU,uBACb,+BACI,4BACI,kCACA,wCACA,wCACA,wCAGR,+BAEI,4BACI,4BAAKsB,EAAMlB,IACX,4BAAKkB,EAAM5C,UACX,4BAAK4C,EAAMU,MAEX,+C,GA/EG1B,IAAMC,WCFpBuC,E,kDAEjB,aAAc,IAAD,6BACT,eAEAvE,aAAawE,WAAW,SAHf,E,qDAQT,OAAO,kBAAC,IAAD,CAAUhD,GAAG,U,GAVQO,IAAMC,WCCrBlC,E,kDACjB,aAAc,IAAD,sBACT,eACA,IAAIC,GAAW,EAFN,OAIKC,aAAaC,QAAQ,WACzBF,GAAW,GAErB,EAAKG,MAAQ,CACTC,SAAU,GACVJ,WACAO,MAAO,IAEX,EAAKC,SAAY,EAAKA,SAASC,KAAd,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAbT,E,qDAgBJE,GACLC,KAAKC,SAAL,eACKF,EAAGG,OAAOC,KAAOJ,EAAGG,OAAOE,U,0EAInBL,G,gFACbA,EAAGM,iBACIb,EAAYQ,KAAKT,MAAjBC,S,kBAEgBc,IAAMC,KAAK,mBAAoB,CAACf,a,OAE3B,OAFlBgB,E,QAEEA,KAAKC,QACTpB,aAAaqB,QAAQ,QAASF,EAAKA,KAAKG,OACxCX,KAAKC,SAAS,CACVb,UAAU,EACVO,MAAMa,EAAKA,KAAKb,MAChBiB,QAAQJ,EAAKA,KAAKI,WAGtBZ,KAAKC,SAAS,CACVN,MAAOa,EAAKA,KAAKb,MACjBiB,QAASJ,EAAKA,KAAKI,U,gDAK3BZ,KAAKC,SAAS,CACVN,MAAO,KAAIA,MACXiB,QAAS,KAAIA,U,+IAMrB,OAA2B,IAAxBZ,KAAKT,MAAMH,SACH,kBAAC,IAAD,CAAUyB,GAAG,eAGpB,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,YACX,0BAAMC,SAAUf,KAAKF,YACjB,yBAAKgB,UAAU,cACX,iEAAsC,sCACtC,2BAAOE,KAAK,OAAOC,YAAY,iCAAiCb,MAAOJ,KAAKT,MAAMC,SAAUI,SAAUI,KAAKJ,SAAUO,KAAK,WAAWW,UAAU,kBAEnJ,yBAAKA,UAAU,oBACVd,KAAKT,MAAMqB,SAEhB,yBAAKE,UAAU,cACX,4BAAQE,KAAK,SAASF,UAAU,mBAAhC,4B,GArEGM,IAAMC,WCEpByC,E,kDAEjB,aAAc,IAAD,sBACT,eACA,IAAI1E,GAAW,EAFN,OAIKC,aAAaC,QAAQ,WACzBF,GAAW,GAErB,EAAKG,MAAO,CACRH,YARK,E,qDAaT,OAA2B,IAAxBY,KAAKT,MAAMH,SACH,kBAAC,IAAD,CAAUyB,GAAG,MAGpB,6BACI,kBAAC,EAAD,MACA,yBAAKC,UAAU,aACX,uD,GAtBiBM,IAAMC,WCoC5B0C,MAtBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACjB,KAAM,mBAAmBkB,UAAWC,IACjD,kBAAC,IAAD,CAAOF,OAAK,EAACjB,KAAM,IAAIkB,UAAW9E,IAClC,kBAAC,IAAD,CAAO6E,OAAK,EAACjB,KAAK,QAAQkB,UAAWjB,IACrC,kBAAC,IAAD,CAAOD,KAAK,aAAakB,UAAWhC,IACpC,kBAAC,IAAD,CAAOc,KAAK,aAAakB,UAAWE,IACpC,kBAAC,IAAD,CAAOpB,KAAK,aAAakB,UAAWlC,IACpC,kBAAC,IAAD,CAAOgB,KAAK,SAASkB,UAAWP,IAChC,kBAAC,IAAD,CAAOX,KAAK,UAAUkB,UAAWG,IACjC,kBAAC,IAAD,CAAOrB,KAAK,UAAUkB,UAAWL,IACjC,kBAAC,IAAD,CAAQK,UAAWH,OCrBPO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjC,MACvB,2DCZNkC,IAASC,OAAQ,kBAAC,EAAD,MAAUC,SAASC,eAAe,SD2H7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,MAAK,SAAAsC,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.726b160b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Redirect,Link} from \"react-router-dom\"\r\nimport Axios from \"axios\"\r\n\r\nexport default class Login extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        let loggedIn = false\r\n        \r\n        const token = localStorage.getItem(\"token\")\r\n        if(token) loggedIn = true\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loggedIn,\r\n            remember_me:\"\",\r\n            error: \"\"\r\n        }\r\n        this.onChange =  this.onChange.bind(this)\r\n        this.formSubmit = this.formSubmit.bind(this)\r\n    }\r\n\r\n    onChange(ev){\r\n        this.setState({\r\n            [ev.target.name]: ev.target.value\r\n        })\r\n    }\r\n\r\n    async formSubmit(ev){\r\n        ev.preventDefault()\r\n        const {username, password} = this.state\r\n        try {\r\n            const data = await Axios.post(\"/login\", {username, password})\r\n            \r\n            if(data.data.status === 200) {\r\n                localStorage.setItem(\"token\", data.data.token)\r\n                this.setState({\r\n                    loggedIn: true,\r\n                    error:data.data.message\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    error: data.data.message\r\n                })\r\n            }\r\n            \r\n        } catch (err) {\r\n            this.setState({\r\n                error: err.message\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loggedIn === true){\r\n            return <Redirect to=\"/dashboard\" />\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-8\"></div>\r\n                    <div className=\"col-sm-4\">\r\n                        <form onSubmit={this.formSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>Username <span>(*)</span></label>\r\n                                <input type=\"text\" placeholder=\"Enter Username\" value={this.state.username} onChange={this.onChange} name=\"username\" className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Password <span>(*)</span></label>\r\n                                <input type=\"password\" placeholder=\"Enter Password\" value={this.state.password} onChange={this.onChange} name=\"password\" className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"form-group error\">                \t\r\n                                {this.state.error}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"checkbox checkbox-primary\">\r\n                                    <input\r\n                                        name=\"remember_me\"\r\n                                        value={true}\r\n                                        onChange={this.onChange}\r\n                                        id=\"checkbox1\"\r\n                                        type=\"checkbox\" />\r\n                                    <label htmlFor=\"checkbox1\">\r\n                                        Remember Me\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Link to=\"forgot-password\">Forgot Password</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport logo from '../../assets/images/logo.png';\r\nexport default class Header extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"header\">\r\n            <nav className=\"navbar navbar-expand-lg container\">\r\n              <img src={logo} alt=\"Logo\" />\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                <ul className=\"navbar-nav custom-nav pull-right\">\r\n                  <li className=\"nav-item active\">\r\n                    <Link className=\"nav-link\" to=\"/dashboard\">Dashboard</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/user\">User</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/ajeet\">Ajeet</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/logout\">Logout</Link>\r\n                  </li>\r\n                  \r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </header>\r\n      \r\n        )\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nimport Header from '../Header/header';\r\n\r\nexport default class Dashboard extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        let loggedIn = false\r\n        \r\n        const token = localStorage.getItem(\"token\")\r\n        if(token) loggedIn = true\r\n        this.logout = this.logout.bind(this)\r\n        this.state= {\r\n            loggedIn\r\n        }\r\n    }\r\n\r\n    logout(){\r\n        this.setState({\r\n            loggedIn: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loggedIn === false){\r\n            return <Redirect to=\"/logout\" />\r\n        }\r\n        return(\r\n            <div>               \r\n                <Header/>\r\n                <div className=\"container\">\r\n                    <h1>View Dashboard Details</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport {Redirect,Link} from \"react-router-dom\"\r\n\r\nimport Header from '../Header/header';\r\n\r\nexport default class Users extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let loggedIn = false        \r\n        const token = localStorage.getItem(\"token\")\r\n        if(token) loggedIn = true\r\n        this.logout = this.logout.bind(this)\r\n        this.state= {\r\n            loggedIn\r\n        }\r\n\r\n        // get user details\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    fetchData(){\r\n        const urlId = this.props.match.params.id\r\n        const url = \"/user/\"+urlId;\r\n        return fetch(url)\r\n                .then(res => res.json())\r\n                \r\n                .then(\r\n                (result) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    items: result.data\r\n                    });\r\n                },\r\n                \r\n                (error) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n    logout(){\r\n        this.setState({\r\n            loggedIn: false\r\n        })\r\n    }\r\n\r\n    render(match){\r\n        if(this.state.loggedIn === false){\r\n            return <Redirect to=\"/logout\" />\r\n        }\r\n        // console.log(this.state)\r\n        const { error, isLoaded, items } = this.state;\r\n                    \r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <div className=\"container\">\r\n                    <h1>View User Details</h1>\r\n                    {(error) ? <div>Error: {error.message}</div> : null }\r\n                    {(!isLoaded) ? <div>Loading...</div> : null }\r\n                    <table className=\"table table-borderd\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>id</th>\r\n                                <th>Username</th>\r\n                                <th>Password</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            <tr >\r\n                                <td>{items.id}</td>\r\n                                <td>{items.username}</td>\r\n                                <td>{items.pass}</td>\r\n                                {/* '/users/'+items.id */}\r\n                                <td><Link to={`${this.props.match.path}/2`} className=\"nav-link\">Edit</Link></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport {Redirect,NavLink,Switch,Route} from \"react-router-dom\"\r\nimport Header from '../Header/header';\r\n\r\nimport Users from './Users';\r\nexport default class User extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let loggedIn = false        \r\n        const token = localStorage.getItem(\"token\")\r\n        if(token) loggedIn = true\r\n        this.logout = this.logout.bind(this)\r\n        this.state= {\r\n            loggedIn\r\n        }\r\n\r\n        // get user details\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch('/users')\r\n          .then(res => res.json())\r\n          // .then(data => console.log('data', data.data))\r\n          .then(\r\n            (result) => {\r\n                console.log(result);\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result\r\n              });\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n    }\r\n\r\n    logout(){\r\n        this.setState({\r\n            loggedIn: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loggedIn === false){\r\n            return <Redirect to=\"/logout\" />\r\n        }\r\n        const { error, isLoaded, items } = this.state;\r\n        \r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <div className=\"container\">\r\n                    <h1>View User Details</h1>\r\n                    {(error) ? <div>Error: {error.message}</div> : null }\r\n                    {(!isLoaded) ? <div>Loading...</div> : null }\r\n                    <table className=\"table table-borderd\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>id</th>\r\n                                <th>Username</th>\r\n                                <th>Password</th>\r\n                                <th>Email</th>\r\n                                <th>Mobile</th>\r\n                                <th>Address</th>\r\n                                <th>Action </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {items.map(item => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.id}</td>\r\n                                <td>{item.username}</td>\r\n                                <td>{item.password}</td>\r\n                                <td>{item.email}</td>\r\n                                <td>{item.mobile}</td>\r\n                                <td>{item.address}</td>\r\n                                <td><NavLink to={'/users/'+item.id}>Edit</NavLink></td>\r\n                                {/* <td><Link to={'/dashboard/'}>Edit</Link></td> */}\r\n                                {/* <td><NavLink to={`${this.props.match.url}/`+item.id}>Edit</NavLink></td> */}\r\n                            </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n                \r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport {Redirect,Link} from \"react-router-dom\"\r\n\r\nimport Axios from \"axios\"\r\nimport Header from '../Header/header';\r\n\r\nexport default class Add extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        \r\n\r\n        let loggedIn = false        \r\n        const token = localStorage.getItem(\"token\")\r\n        if(token) loggedIn = true\r\n        this.logout = this.logout.bind(this)\r\n        this.state= {\r\n            loggedIn\r\n        }\r\n\r\n        // get user details\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n\r\n        // add user\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            mobile: \"\",\r\n            email: \"\",\r\n            loggedIn,\r\n            error: \"\"\r\n        }\r\n        this.onChange =  this.onChange.bind(this)\r\n        this.formSubmit = this.formSubmit.bind(this)\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const urlId = this.props.match.params.id\r\n        if (urlId) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n    fetchData(){\r\n        const urlId = this.props.match.params.id\r\n        console.log(urlId);\r\n        const url = \"/user/\"+urlId;\r\n        return fetch(url)\r\n                .then(res => res.json())\r\n                \r\n                .then(\r\n                (result) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    items: result.data\r\n                    });\r\n                },\r\n                \r\n                (error) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n    logout(){\r\n        this.setState({\r\n            loggedIn: false\r\n        })\r\n    }\r\n\r\n    onChange(ev){\r\n        this.setState({\r\n            [ev.target.name]: ev.target.value\r\n        })\r\n    }\r\n\r\n    async formSubmit(ev){\r\n        ev.preventDefault()\r\n        const {username, password,mobile,email} = this.state\r\n        try {\r\n            const status = await Axios.post(\"/user-register\", {username, password,mobile,email})\r\n            console.log(\"register success\",status)\r\n        } catch (err) {\r\n            this.setState({\r\n                error: err.message\r\n            })\r\n        }\r\n    }\r\n\r\n    render(match){\r\n        if(this.state.loggedIn === false){\r\n            return <Redirect to=\"/logout\" />\r\n        }\r\n        // console.log(this.state)\r\n        const { error, isLoaded, items } = this.state;\r\n                    \r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <div className=\"container\">\r\n                    <h1>Add New User</h1>\r\n                    <form onSubmit={this.formSubmit}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Username</label>\r\n                                    <input type=\"text\" name=\"username\" placeholder=\"Enter Your Username\" value={this.state.username} className=\"form-control\" onChange={this.onChange}/>\r\n                                </div>\r\n                            </div>                        \r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Email</label>\r\n                                    <input type=\"text\" name=\"email\" placeholder=\"Enter Your Email\" value={this.state.email} className=\"form-control\" onChange={this.onChange}/>\r\n                                </div>\r\n                            </div>                        \r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Mobile</label>\r\n                                    <input type=\"text\" name=\"mobile\" placeholder=\"Enter Your Mobile Number\" value={this.state.mobile} className=\"form-control\" onChange={this.onChange}/>\r\n                                </div>\r\n                            </div>                        \r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Password</label>\r\n                                    <input type=\"text\" name=\"password\" placeholder=\"Enter Your Password\" value={this.state.password} className=\"form-control\" onChange={this.onChange}/>\r\n                                </div>\r\n                            </div>                        \r\n                            {/* <div className=\"col-sm-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Address</label>\r\n                                    <textarea name=\"address\" className=\"form-control\" rows=\"5\" onChange={this.onChange}>{this.state.address}</textarea>\r\n                                </div>\r\n                            </div>                         */}\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                </div>\r\n                            </div>                    \r\n                        </div>\r\n                    </form>    \r\n                    \r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport {Redirect,Link} from \"react-router-dom\"\r\n\r\nimport Header from '../Header/header';\r\n\r\n\r\nexport default class Ajeet extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        let loggedIn = false\r\n        \r\n        const token = localStorage.getItem(\"token\")\r\n        if(token) loggedIn = true\r\n        \r\n        this.state= {\r\n            loggedIn\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loggedIn === false){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return(\r\n            <div>               \r\n                <Header/>\r\n                <div className=\"container\">\r\n                    <h1>View Ajeet Panwar Details</h1>\r\n                    <Link to=\"dashboard\">afdafda</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport {Redirect,Link} from \"react-router-dom\"\r\n\r\nimport Header from '../Header/header';\r\n\r\nexport default class Index extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let loggedIn = false        \r\n        const token = localStorage.getItem(\"token\")\r\n        if(token) loggedIn = true\r\n        this.logout = this.logout.bind(this)\r\n        this.state= {\r\n            loggedIn\r\n        }\r\n\r\n        // get user details\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n    fetchData(){\r\n        // const urlId = this.props.match.params.id\r\n        // const url = \"/user/\"+urlId;\r\n        return fetch('/user/2')\r\n                .then(res => res.json())\r\n                \r\n                .then(\r\n                (result) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    items: result.data\r\n                    });\r\n                },\r\n                \r\n                (error) => {\r\n                    this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n    logout(){\r\n        this.setState({\r\n            loggedIn: false\r\n        })\r\n    }\r\n\r\n    render(match){\r\n        if(this.state.loggedIn === false){\r\n            return <Redirect to=\"/logout\" />\r\n        }\r\n        // console.log(this.state)\r\n        const { error, isLoaded, items } = this.state;\r\n                    \r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <div className=\"container\">\r\n                    <h1>View User Details</h1>\r\n                    <table className=\"table table-borderd\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>id</th>\r\n                                <th>Username</th>\r\n                                <th>Password</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            <tr >\r\n                                <td>{items.id}</td>\r\n                                <td>{items.username}</td>\r\n                                <td>{items.pass}</td>\r\n                                {/* '/users/'+items.id */}\r\n                                <td>fdsafd</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nexport default class Logout extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        // token remove\r\n        localStorage.removeItem(\"token\")\r\n    }\r\n\r\n   \r\n    render(){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n}","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport Axios from \"axios\"\r\n\r\nexport default class Login extends React.Component{\r\n    constructor(){\r\n        super()\r\n        let loggedIn = false\r\n        \r\n        const token = localStorage.getItem(\"token\")\r\n        if(token) loggedIn = true\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            loggedIn,\r\n            error: \"\"\r\n        }\r\n        this.onChange =  this.onChange.bind(this)\r\n        this.formSubmit = this.formSubmit.bind(this)\r\n    }\r\n\r\n    onChange(ev){\r\n        this.setState({\r\n            [ev.target.name]: ev.target.value\r\n        })\r\n    }\r\n\r\n    async formSubmit(ev){\r\n        ev.preventDefault()\r\n        const {username} = this.state\r\n        try {\r\n            const data = await Axios.post(\"/forgot-password\", {username})\r\n            \r\n            if(data.data.status === 200) {\r\n                localStorage.setItem(\"token\", data.data.token)\r\n                this.setState({\r\n                    loggedIn: true,\r\n                    error:data.data.error,\r\n                    message:data.data.message\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    error: data.data.error,\r\n                    message: data.data.message\r\n                })\r\n            }\r\n            \r\n        } catch (err) {\r\n            this.setState({\r\n                error: err.error,\r\n                message: err.message\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loggedIn === true){\r\n            return <Redirect to=\"/dashboard\" />\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-3\"></div>\r\n                    <div className=\"col-sm-6\">\r\n                        <form onSubmit={this.formSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>Enter Registered Email Address <span>(*)</span></label>\r\n                                <input type=\"text\" placeholder=\"Enter Registered Email Address\" value={this.state.username} onChange={this.onChange} name=\"username\" className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"form-group error\">                \t\r\n                                {this.state.message}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Forgot Password</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nimport Header from '../Header/header';\r\n\r\n\r\nexport default class Nomatch extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        let loggedIn = false\r\n        \r\n        const token = localStorage.getItem(\"token\")\r\n        if(token) loggedIn = true\r\n        \r\n        this.state= {\r\n            loggedIn\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loggedIn === false){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return(\r\n            <div>               \r\n                <Header/>\r\n                <div className=\"container\">\r\n                    <h1>404 page Nomatch </h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\n\nimport React from 'react';\n// import logo from '../logo.svg';\n// import '../App.css';\nimport {Switch, Route,BrowserRouter} from \"react-router-dom\"\nimport {} from 'bootstrap-4-react';\nimport '../assets/css/App.scss'; \n\n\nimport Login from './Login/Login';\nimport Dashboard from './Dashboard/index';\nimport User from './User/User';\nimport Users from './User/Users';\nimport Adduser from './User/Add';\nimport Ajeet from './Ajeet/Ajeet';\nimport Ajeet1 from './Ajeet/Index';\nimport Logout from './Logout/Logout';\nimport ForgotPassword from './Forgot-password/Index';\nimport Nomatch from './Nomatch/Nomatch';\nfunction App() {\n  return (    \n    <BrowserRouter>\n      <Switch>\n        <Route exact path= \"/forgot-password\" component={ForgotPassword} />\n        <Route exact path= \"/\" component={Login} />\n        <Route exact path=\"/user\" component={User} />        \n        <Route path=\"/users/:id\" component={Users} />        \n        <Route path=\"/user/add/\" component={Adduser} />        \n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/ajeet\" component={Ajeet} />\n        <Route path=\"/panwar\" component={Ajeet1} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route  component={Nomatch} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {} from \"react-router-dom\"\n\nReactDOM.render( <App /> , document.getElementById('root'));\n// ReactDOM.render(\n//     <BrowserRouter>\n//     <App />\n//     </BrowserRouter>\n//     , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.7ee17852.png\";"],"sourceRoot":""}